
# 测试环境用 
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.10.5.18:1901:hccdb
#jdbc.username=htl_ii
#jdbc.password=htl_ii

# 预发布环境用 
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@rac02-vip:1521:mgcdb2
#jdbc.username=htl_ii
#jdbc.password=htl_002_1024

# 生产只读库
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.10.4.88:1521:testread
#jdbc.username=htl_ii
#jdbc.password=htl_ii

# 本地开发环境用 
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.10.7.111:1521:hccdev
#jdbc.username=htl_ii
#jdbc.password=htl_ii

# newtest环境用 
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.10.7.112:1901: HKCTS01
#jdbc.username=htl_ii
#jdbc.password=htl_ii

# 发布环境
jndiname=jdbc/hotelIII

#基础数据参数的读取
naming_factory={HBIZ_cdm_naming_factory}
namespace_address={HBIZ_cdm_naming_url}
home_address={HBIZ_cdm_jndiName}
#naming_factory=com.sun.jndi.cosnaming.CNCtxFactory
#namespace_address=iiop://10.10.1.177:9810
#home_address=nodes/uat03node/servers/server6/ejb/com/mangocity/cdm/service/ejb/CdmServiceHome
#naming_factory=com.sun.jndi.cosnaming.CNCtxFactory
#namespace_address=corbaloc::Dev03:10004,:Dev04:10004
#home_address=cell/clusters/c09/ejb/com/mangocity/cdm/service/ejb/CdmServiceHome

#naming_factory=com.sun.jndi.cosnaming.CNCtxFactory
#namespace_address=iiop://10.10.4.16:2810
#home_address=nodes/wasdev-Node01/servers/server1/ejb/com/mangocity/cdm/service/ejb/CdmServiceHome

country_treepath=/root/comment/area
province_treepath=/root/comment/area/CN
hotel_treepath=/root/hotel/
#酒店基础数据读取公用路径
hotel_common_treepath=/root/comment/
#基础数据读取路径标识:常用城市,性别,信用卡种类(呼叫中心使用),称谓,担保状态,币种,订单来源
hotel_common_treepath_flag=res_commonCity,sex,creditCard,res_appellative,res_guaranteeState,currency,origin

######## Begin 酒店二期的外部接口数据库参数 2007-08-08###############

##会员接口
#1.会员
hotelii_i_member.jndiName ={HBIZ_member.jndiName}
hotelii_i_member.naming_url ={HBIZ_member.naming_url}
hotelii_i_member.naming_factory = {HBIZ_member.naming_factory}
#2.积分
hotelii_i_point.jndiName ={HBIZ_point.jndiName}
hotelii_i_point.naming_url ={HBIZ_point.naming_url}
hotelii_i_point.naming_factory = {HBIZ_point.naming_factory}
#3.旅行者
hotelii_i_passenger.jndiName ={HBIZ_passenger.jndiName}
hotelii_i_passenger.naming_url ={HBIZ_passenger.naming_url}
hotelii_i_passenger.naming_factory = {HBIZ_passenger.naming_factory}

##4.信用卡接口
hotelii_i_credit.jndiName ={HBIZ_credit.jndiName}
hotelii_i_credit.naming_url ={HBIZ_credit.naming_url}
hotelii_i_credit.naming_factory = {HBIZ_credit.naming_factory}

##5.公共信息
hotelii_i_msg.serviceUrl ={HBIZ_msg.serviceUrl}

##6.配送
hotelii_i_delivery.jndiName ={HOP_delivery.jndiName}
hotelii_i_delivery.naming_url ={HOP_delivery.naming_url}
hotelii_i_delivery.naming_factory = {HOP_delivery.naming_factory}
hotelii_i_delivery_unit.jndiName ={HOP_delivery_unit.jndiName}
hotelii_i_delivery_charge.jndiName ={HOP_delivery_charge.jndiName}
#配送单详细信息jsp url
hotelii_i_delivery.billdetail_url ={HOP_delivery.billdetail_url}
#配送资源信息jsp url
hotelii_i_delivery.resdetail_url ={HOP_delivery.resdetail_url}

##7.汇率
hotelii_i_rate.jndiName ={HBIZ_rate.jndiName}
hotelii_i_rate.naming_url ={HBIZ_rate.naming_url}
hotelii_i_rate.naming_factory = {HBIZ_rate.naming_factory}

#预授权 
hotelii_i_preauth.jndiName ={HOP_preauth.jndiName}
hotelii_i_preauth.naming_url ={HOP_preauth.naming_url}
hotelii_i_preauth.naming_factory = {HOP_preauth.naming_factory}
#预授权单信息url
hotelii_i_preauth.detail_url ={HOP_preauth.detail_url}
#预售权查看新url
hotel.payment.creditCardIdHistoryUrl = {hotel.payment.creditCardIdHistoryUrl}

#出票单位、配送单位和收款单位
atii_security_url={TOP_atii_security_url}


######## End 酒店二期的外部接口数据库参数###############


#Current web Application's name eg. applicationName=app1   
#当前WEB应用名和安全系统数据库的表applications的字段name对应
#如果为空,则取用web.xml的display-name元素的值
applicationName=

#用RMI或EJB或spring的httpInvoking
#例如：securityService_URL=rmi://localhost:1199/SecurityService
securityService_URL={CenterCecurity_securityService_URL}
#securityService_URL=http://10.10.4.15:9080/CenterSecurityWeb/remoting/SecurityService

#cas web地址
cas_server_web={CenterCecurity_cas_server_web}
#cas_server_web=http://10.10.1.177/cas
#cas_server_web=http://10.10.4.15:9080/cas

#用户认证失败的显示页面
#authenticationFailureUrl=/casfailed.jsp					
authenticationFailureUrl_cas=/accessDenied.jsp

#提示用户权限不足的显示页面
#accessDenied=/accessDenied.jsp 							
accessDenied_cas=/accessDenied.jsp

#ticket校验的URI,不用修改
#serviceUrl = /j_acegi_cas_security_check				
serviceUrl_cas=/j_acegi_cas_security_check

#配置登录成功回调
#说明：
#（1）可以不填
#afterSuccessfulAuthenticationBeanName=afterSuccessfulAuthentication   用户认证成功的回调Bean, 优先取用spring定义的Bean
afterSuccessfulAuthenticationBeanName=
#如果afterSuccessfulAuthenticationBeanName值为空,则使用自定义的类
#afterSuccessfulAuthentication=com.mangocity.security.acegi.callback.NullAfterSuccessfulAuthentication(这个实现什么都不做) 
afterSuccessfulAuthentication=
####  ????????????????
WEB_REC_EMAIL={HWEB_WEB_REC_EMAIL}

#酒店CC对外提供的rmi接口所用参数
FULFILL_HOTEL_RMI_ADDRESS={FULFILL_hotel_rmiAddress}
PAY_HOTEL_RMI_ADDRESS={PAY_HOTEL_RMI_ADDRESS}
#rmi端口配置参数
HBIZ_CC_RMI_PARA={HBIZ_CC_RMI_PARA}

#是否使用地图接口
HOP_NOT_USE_MAP={HOP_NOT_USE_MAP}
#VVIP参数
HOP_VVIP={HOP_VVIP}

#TMC订单参数
HOP_TMC_ORDER={HOP_TMC_ORDER}
TMC_ORDER_VIEW_URL={TMC_ORDER_VIEW_URL}
TMC_ORDER_EDIT_URL={TMC_ORDER_EDIT_URL}

#网站会员登陆URL
HWEB_MEMBER_LOGIN_URL={HWEB_MEMBER_LOGIN_URL}
#网站会员登陆返回URL
HWEB_MEMBER_LOGIN_RETURN_URL={HWEB_MEMBER_LOGIN_RETURN_URL}
#网站在线支付IPS-URL
HWEB_IPS_PAY_URL={HWEB_IPS_PAY_URL}
#网站IPS在线支付返回URL
HWEB_IPS_PAY_RETURN_URL={HWEB_IPS_PAY_RETURN_URL}
#网站在线支付CMB-URL
HWEB_CMB_PAY_URL={HWEB_CMB_PAY_URL}
#网站CMB在线支付返回URL
HWEB_CMB_PAY_RETURN_URL={HWEB_CMB_PAY_RETURN_URL}
#网站调用CC扣退配额RMI
HWEB_HOTEL_RMIADDRESS_QUOTASER={HWEB_hotel_rmiAddress_QuotaSer}

#网站114深圳会员CD
HWEB_114_SZ_MEMBER_CD={HWEB_114_SZ_MEMBER_CD}

#TMC 酒店网站的上下文
THWEB_URL={THWEB_URL}
HWEB_URL={HWEB_URL}
THWEB_T0_HWEB_URL={THWEB_T0_HWEB_URL}
HWEB_TO_THWEB_URL={HWEB_TO_THWEB_URL}
#HDL直联酒店中间层WEB SERVICE的URL
#ws.mangohotel.url=http://localhost:8081/HDL/hotel-ws
#ws.mangohotel.url=http://10.10.7.4:9081/HDL/service/MangoHotel
#ws.hop.mangohotel.url=http://10.10.7.102/QHDL/service/MangoHotel
#ws.hbiz.mangohotel.url=http://10.10.7.102/QHDL/service/MangoHotel
ws.hop.mangohotel.url={HOP_HDL_ORDER}
ws.hbiz.mangohotel.url={HBIZ_HDL_ORDER}

#支付宝
HWEB_ALIPAY_RETURN_URL={HWEB_ALIPAY_RETURN_URL}
HWEB_ALIPAY_NOTIFY_URL={HWEB_ALIPAY_NOTIFY_URL}
#HWEB_ALIPAY_RETURN_URL=http://10.10.7.101/HWEB/aliPay!fromAli.action
#HWEB_ALIPAY_NOTIFY_URL=http://10.10.7.101/HWEB/aliPay!doNotify.action
#交行在线
HWEB_COMMPAY_BG_RETURN_URL={HWEB_COMMPAY_BG_RETURN_URL}
HWEB_COMMPAY_PAGE_RETURN_URL={HWEB_COMMPAY_PAGE_RETURN_URL}
#HWEB_COMMPAY_BG_RETURN_URL=http://10.10.7.101/HWEB/commPay!fromComm.action
#HWEB_COMMPAY_PAGE_RETURN_URL=http://10.10.7.101/HWEB/commPay!fromComm.action
#易宝
HWEB_YEEPAY_RETURN_URL={HWEB_YEEPAY_RETURN_URL}
#HWEB_YEEPAY_RETURN_URL=http://10.10.7.101/HWEB/yeePay!fromYee.action
#IPS
HWEB_IPSPAY_ADDRESS_URL={HWEB_IPSPAY_ADDRESS_URL}
HWEB_IPSPAY_BG_RETURN_URL={HWEB_IPSPAY_BG_RETURN_URL}
#HWEB_IPSPAY_ADDRESS_URL=http://10.10.7.101/payWeb/MangocityPayment
#HWEB_IPSPAY_BG_RETURN_URL=http://10.10.7.101/HWEB/ipsPay!fromIps.action

#新的支付接口 add by shengwei.zuo
HWEB_mpmonline_req_url = {HWEB_mpmonline_req_url}
#HWEB_mpmonline_req_url =  http://10.10.7.101/MpmWeb/paygateway/paymentOnline_service.action 


#香港wsdl的address地址
#测试如：commonservice: address: http://tiktweb.ctshk.com/ctcphotel/services/CommonService
#生产如：commonservice: address: http://172.23.101.110/ctcphotel/services/CommonService
#WS_HOP_HBIZ_HK_AGENTCODE 的值为MANGOCC
#WS_HWEB_HK_AGENTCODE 的值为 MANGOIT
WS_HK_ADDRESS_COMMONFACTORY_URL={HOP_HK_COMMONFACTORY_URL}
WS_HK_ADDRESS_ENQUIRYFACTORY_URL={HOP_HK_ENQUIRYFACTORY_URL}
WS_HK_ADDRESS_SALEFACTORY_URL={HOP_HK_SALEFACTORY_URL}
WS_HOP_HBIZ_HK_AGENTCODE={HOP_HBIZ_HK_AGENTCODE}
WS_HWEB_HK_AGENTCODE={HWEB_HK_AGENTCODE}

#hotel2.9.3 代金券URL
#生产环境发布
VOUCHER_CLIENT_LINK={VOUCHER_CLIENT_LINK}

#短信平台接口
hessian.msg.url={hessian.msg.url}

hotel_hessian_url={hotel_hessian_url}

hotel.member.cash.facade.jndi={hotel.member.cash.facade.jndi}
hotel.member.cash.naming.provider.url={hotel.member.cash.naming.provider.url}
hotel.member.cash.naming.factory={hotel.member.cash.naming.factory}

#ZHX
WS_ZHX_URL=http://dlink.sohoto.com/directlink/send.do
WS_ZHX_OFFICEID=SZX899
WS_ZHX_USERID=SZX89900C
WS_ZHX_PASSWORD=12345678


# lucene配置 begin #

# lucene文件所在目录, 如C:/hotel/index lib, 本地开发使用，上was服务器不需要用到该属性
index.file.dir=/wasdata/c01_link/hotelII/luceneIndex
#index.file.dir=C:/hotel/index lib
#index.file.dir=c:/luceneNew

# 读索引是否使用内存方式,上was服务器必须设置为:true,本地开发可设置为:false
index.useRAMRead=false
# 写索引是否使用内存方式,上was服务器必须设置为:true,本地开发可设置为:false
index.useRAMWrite=true

# lucene配置 end #

# MQ配置 begin #

					
hotel.mq.lucene.url={hotel.mq.lucene.url}
hotel.mq.lucene.user={hotel.mq.lucene.user}
hotel.mq.lucene.password={hotel.mq.lucene.password}



# MQ閰嶇疆 end #




#机加酒参数
partnerCode=fh
hubURL={Hub_QueryHotelSaleInfo_url}
#hubURL=http://www.mangocity.com/Hub/QueryHotelSaleInfo
secretKey=C18C04B3A74FFEA3