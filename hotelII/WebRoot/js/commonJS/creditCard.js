
//验证数字
function isNumber(field,event){ 
var key,keychar; 
if(window.event){ 
key = window.event.keyCode; 
} 
else if (event){ 
key = event.which; 
} 
else{ 
return true 
} 
keychar = String.fromCharCode(key); 
if((key == null)||(key == 0)||(key == 8)||(key == 9)||(key == 13)||(key == 27)){ 
return true; 
} 
else if(("0123456789.").indexOf(keychar)>-1){ 
window.status = ""; 
return true; 
} 
else { 
window.status = "Field excepts numbers only"; 
return false; 
} 
} 
//比较严格验证身份证
var aCity={11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江",31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北",43:"湖南",44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏",61:"陕西",62:"甘肃",63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门",91:"国外"} 

function checkIdcard(sId){
    if (sId.length=15){
    	return checkIdcardOLD(sId);
    }else {
		var iSum=0 
		var info="" 
		if(!/^\d{17}(\d|x)$/i.test(sId))return false; 
		sId=sId.replace(/x$/i,"a"); 
		if(aCity[parseInt(sId.substr(0,2))]==null)return "Error:非法地区"; 
		sBirthday=sId.substr(6,4)+"-"+Number(sId.substr(10,2))+"-"+Number(sId.substr(12,2)); 
		var d=new Date(sBirthday.replace(/-/g,"/")) 
		if(sBirthday!=(d.getFullYear()+"-"+ (d.getMonth()+1) + "-" + d.getDate()))return "Error:非法生日"; 
		for(var i = 17;i>=0;i --) iSum += (Math.pow(2,i) % 11) * parseInt(sId.charAt(17 - i),11) 
		if(iSum%11!=1)return "Error:非法证号"; 
		return aCity[parseInt(sId.substr(0,2))]+","+sBirthday+","+(sId.substr(16,1)%2?"男":"女") 
	}
} 


//验证身份证
function checkIdcardOLD(idcard){   
  var Errors=new Array("验证通过!","身份证号码位数不对!","身份证号码出生日期超出范围或含有非法字符!","身份证号码校验错误!","身份证地区非法!");   
 
  var idcard,Y,JYM;   
  var S,M;   
  var idcard_array = new Array();   
  idcard_array = idcard.split("");   
 
  // alert("idcard==="+idcard);
 
 
  switch(idcard.length){   
    case 15:   
      if ((parseInt(idcard.substr(6,2))+1900) % 4 == 0 || ((parseInt(idcard.substr(6,2))+1900) % 100 == 0 && (parseInt(idcard.substr(6,2))+1900) % 4 == 0 )){   
        ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//测试出生日期的合法性   
      }   
      else{   
        ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//测试出生日期的合法性   
      }   
      if(ereg.test(idcard))   
       return true;   
       //return Errors[0];   
      else  
       return false;   
       //return Errors[2];   
    break;   
  case 18:   
    if ( parseInt(idcard.substr(6,4)) % 4 == 0 || (parseInt(idcard.substr(6,4)) % 100 == 0 && parseInt(idcard.substr(6,4))%4 == 0 )){   
      ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//闰年出生日期的合法性正则表达式   
    }   
    else{   
    ereg = /^[1-9][0-9]{5}19[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//平年出生日期的合法性正则表达式   
    }   
    if(ereg.test(idcard)){   
      S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7 + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9 + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10 + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5 + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8 + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4 + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2 + parseInt(idcard_array[7]) * 1 + parseInt(idcard_array[8]) * 6 + parseInt(idcard_array[9]) * 3 ;   
      Y = S % 11;   
      M = "F";   
      JYM = "10X98765432";   
      M = JYM.substr(Y,1);   
      if(M == idcard_array[17])   
        return true;   
        //return Errors[0];   
      else
        return false;     
       //return Errors[3];   
    }   
    else 
    return false;    
    //return Errors[2];   
    break;   
  default:   
    return false;   
    //return Errors[1];   
    break;   
  }   
 // alert("idcard==="+idcard);
  return true;   
}  


//alert(checkIdcard(document.getElementById("idNo").value));

//银行卡段验证
//obj：卡号，objBankCode：卡种代码 
function checkBankCardNo(obj,objBankCode){

//alert("begin checkBankCardNo");
//x-x-x(卡种-卡长度-卡特定码)
var bankCardBegin=new Array(
//中国银行
"7-16-356833",
"7-16-356835",
"7-16-409665",
"7-16-409666",
"7-16-409667",
"7-16-409668",
"7-16-409669",
"7-16-409670",
"7-16-409671",
"7-16-409672",
"7-16-438088",
"7-16-512315",
"7-16-512316",
"7-16-512411",
"7-16-512412",
"7-16-514957",
"7-16-514958",
"7-16-622760",
"7-16-622752",
"7-16-622753",
"7-16-622755",
"7-16-622756",
"7-16-622757",
"7-16-622758",
"7-16-552742",
"7-16-553131",
"7-16-518378",  
"7-16-518379",
"7-16-518474",
"7-16-518475",
"7-16-518476",
"7-16-547766",
"7-16-547767",
"7-16-558868",
"7-16-622759",
"7-16-622761",
"7-16-622762",
"7-16-622763",
"7-16-524864",
"7-16-524865",
"7-16-525745",
"7-16-525746",
"7-16-622346",
"7-16-622347",
"7-16-622750",
"7-16-622751",
//中行新增卡型1个(09.07.07)
"7-16-628388",
//招商银行
"12-16-439225",
"12-16-439226",
"12-16-518710",
"12-16-518718",
"12-16-439188",
"12-16-439227",
"12-16-545619",
"12-16-545620",
"12-16-545621",
"12-16-545623",
"12-16-545947",
"12-16-545948",
"12-16-955556",
"12-16-955557",
"12-16-955558",
"12-16-955559",
"12-16-552587",
"12-16-622581",
"12-16-622582",
"12-16-479228",
"12-16-479229",
"12-16-552534",
"12-16-622575",
"12-16-622576",
"12-16-622577",
"12-16-622578",
"12-16-622579",
"12-16-356885",
"12-16-356886",
"12-16-356887",
"12-16-356888",
"12-16-356889",
"12-16-356890",
//招行新增卡型3个(09.07.07)
"12-16-628262",
"12-16-628362",
"12-16-521302",
//01020000工商银行
"8-16-370246",                     
"8-16-370247",                                
"8-16-427028",                    
"8-16-427038",                    
"8-16-510529",                    
"8-16-524047",                    
"8-16-548259",                    
"8-16-402791",                    
"8-16-427010",                    
"8-16-427018",                    
"8-16-427019",                    
"8-16-427020",                    
"8-16-427029",
"8-16-427030",
"8-16-427039",                    
"8-16-427062",                    
"8-16-427064",                    
"8-16-438125",                    
"8-16-451804",                    
"8-16-451804",                    
"8-16-451810",
"8-16-451811",
"8-16-451810",
"8-16-451811",
"8-16-45806",                                  
"8-16-458071",                    
"8-16-458071",                    
"8-16-530970",                    
"8-16-53098",                    
"8-16-53098",                    
"8-16-530990",                    
"8-16-558360",                    
"8-16-438126",                    
"8-16-524091",                    
"8-16-525498",                    
"8-16-622230",                    
"8-16-622235",                    
"8-16-622240",                    
"8-16-622245",                    
"8-16-489734",                    
"8-16-489735",                    
"8-16-489736",                    
"8-16-370248",                     
"8-16-370249",                     
"8-16-622210",                    
"8-16-622211",                    
"8-16-622212",                    
"8-16-622213",                    
"8-16-622214",                    
"8-16-622215",                    
"8-16-622220",                    
"8-16-622225",
//工行新增卡型15个(09.07.07)
"8-15-370246",
"8-15-370247",
"8-15-370248",
"8-15-370249",
"8-16-622223",
"8-16-622224",
"8-16-622231",
"8-16-622232",
"8-16-622233",
"8-16-622234",
"8-16-622237",
"8-16-622238",
"8-16-622239",
"8-16-628286",
"8-16-628288",
//建设银行(01050000)
"9-16-436745",                      
"9-16-436748",           
"9-16-532450",           
"9-16-532458",           
"9-16-436728",         
"9-16-53243",
"9-16-436718",           
"9-16-436738",           
"9-16-552801",           
"9-16-558895",           
"9-16-5453242",         
"9-16-5491031",         
"9-16-553242",      
"9-16-5544033",         
"9-16-453242",           
"9-16-491031",           
"9-16-53242",          
"9-16-544033",           
"9-16-622168",           
"9-16-489592",           
"9-16-622725",           
"9-16-622728",           
"9-16-622166",
//建行新增卡型9个(09.07.07)
"9-16-622707",
"9-16-628266",
"9-16-628366",
"9-16-559051",
"9-16-622708",
"9-18-5453242",
"9-18-5491031",
"9-18-553242",
"9-18-5544033",
//农业银行（01030000）
"10-16-622836",
"10-16-622837",
"10-16-403361", 
"10-16-404117",
"10-16-404118",
"10-16-404119",
"10-16-404120",
"10-16-404121",
"10-16-519412",
"10-16-519413",
"10-16-520082",
"10-16-520083", 
"10-16-552599", 
"10-16-558730", 
"10-16-49102",
"10-16-49102",
"10-16-53591",
"10-16-53591",
//农行新增卡型2个(09.07.07)
"10-16-622820",
"10-16-622830",
//交通银行(03010000)      
"13-16-955590",          
"13-16-955591",          
"13-16-955592",
"13-16-955593",          
"13-16-622254",
"13-16-622255",
"13-16-622256",
"13-16-622257",
"13-16-458123",                             
"13-16-458124",                             
"13-16-521899",                             
"13-16-520169",                             
"13-16-552853",                             
"13-16-49104",                             
"13-16-53783",                             
"13-16-622250",                             
"13-16-622251",                             
"13-16-622252",                             
"13-16-622253",
//兴业银行(03090010)           
"16-16-451289",
"16-16-451290",                  
"16-16-523036",                  
"16-16-524070",                  
"16-16-527414",           
"16-16-622901",
"16-16-622902",
"16-16-486493",                  
"16-16-486494",                  
"16-16-622922",                  
"16-16-486861",
//兴行新增卡型4个(09.07.07)
"16-16-445055", 
"16-16-628212", 
"16-16-461982",
"16-16-528057",   
//深圳发展银行(03070000)            
"6-16-622526",                     
"6-16-435744",                      
"6-16-435745",                      
"6-16-998801",
"6-16-998802",
"6-16-622525",                       
 //中信银行
"17-16-622453",                                           
"17-16-622456",                         
"17-16-400360",                         
"17-16-403391",
"17-16-403392",  
"17-16-403393",  
"17-16-404157",  
"17-16-404158",  
"17-16-404159",  
"17-16-404171",                         
"17-16-404172",                         
"17-16-404173",                         
"17-16-404174",                         
"17-16-433666",
"17-16-433667",
"17-16-433668",
"17-16-433669",  
"17-16-514906",                         
"17-16-518212",                         
"17-16-520108",                         
"17-16-556617",                         
"17-16-558916",                         
"17-16-622678",                         
"17-16-622679",                         
"17-16-622680",                         
"17-16-622688",                         
"17-16-622689",   
//浦发银行(03100000)       
"15-16-515672",                 
"15-16-517650",  
"15-16-525998",  
"15-16-356850",  
"15-16-356851",  
"15-16-356852",  
"15-16-622520",  
"15-16-404738",  
"15-16-404739",  
"15-16-498451",  
"15-16-622523",
"15-16-622517",  
"15-16-622516",  
"15-16-622518",  
"15-16-456418",  
"15-16-622500",
"15-16-622519",
//浦发银行新增卡型5个(09.07.07)
"15-16-622177",  
"15-16-622277", 
"15-16-622521",
"15-16-628221",  
"15-16-628222", 
//广东发展银行(03060000)
"11-16-6858000",             
"11-16-406365",
"11-16-406366",                                    
"11-16-685800",              
"11-16-428911",                                                         
"11-16-685800",                   
"11-16-436768",
"11-16-436769",
"11-16-436770",
"11-16-436771",                                     
"11-16-685800",
"11-16-487013",                                                         
"11-16-685800", 
"11-16-491032",
"11-16-491033",
"11-16-491034",
"11-16-491035",
"11-16-491036",
"11-16-491037",
"11-16-491038",                                     
"11-16-685800",           
"11-16-493427",                                                         
"11-16-685800",
"11-16-518364",                
"11-16-520152",                                                         
"11-16-685800",             
"11-16-520382",                                         
"11-16-685800",      
"11-16-528931",                     
"11-16-685800",         
"11-16-541709",
"11-16-541710",
"11-16-548844",                
"11-16-552794",                     
"11-16-685800",                 
"11-16-558894",                                                          
"11-16-685800",
//广发银行新增卡型7个(09.07.07)
"11-16-622555",
"11-16-622556",
"11-16-622557",
"11-16-622558",
"11-16-622559",
"11-16-622560",
"11-19-685800", 
//民生银行
"20-16-628258",                                  
"20-16-407405",                                  
"20-16-421869",                                  
"20-16-421870",                                  
"20-16-421871",                                  
"20-16-512466",                                  
"20-16-517636",                                  
"20-16-528948",                                  
"20-16-552288",                                  
"20-16-556610",                                  
"20-16-622600",                                  
"20-16-622601",                                  
"20-16-356856",                                  
"20-16-356857",
//民生银行新增卡型3个(09.07.07)
"20-16-427570",
"20-16-427571",
"20-16-622621",
//上海银行
"21-16-356827",
"21-16-356828",
"21-16-519498",
"21-16-520131",
"21-16-622149",
"21-16-622148",
"21-16-524031",
"21-16-356829",
"21-16-356830",
"21-16-548838",
"21-16-486466",
"21-16-402673",
"21-16-402674",
"21-16-622269",
"21-16-622268",
//上海银行新增卡型2个(09.07.07)
"21-16-622300",
"21-16-628230",
//华夏银行
"23-16-539868",                                  
"23-16-528708",                                  
"23-16-528709",                                  
"23-16-523959",                                  
"23-16-622636",                                  
"23-16-622637",                                  
"23-16-539867",
//华夏银行新增卡型1个(09.07.07)
"23-16-628318",
//工行（亚洲）信用卡 5个(09.10.14) add by chenjiajie
"30-16-427062",
"30-16-479120",
"30-16-541801",
"30-16-552814",
"30-16-427064"
);  

//包含银行代码验证
var bankCodeAndCardNo=objBankCode.value+"-"+obj.value.length+"-"+obj.value.substr(0,7);

//不包含银行代码验证
//var bankCodeAndCardNo=obj.value.substr(0,7);
var tempBeginCardNo=bankCodeAndCardNo

var isExist="N";

//alert("bankCodeAndCardNo=="+bankCodeAndCardNo);

//alert("end checkBankCardNo1"+bankCodeAndCardNo);

var firstCardNo=obj.value.substr(0,1);
var secondCardNo=obj.value.substr(1,1);
var tempBankCardBegin;


if (objBankCode.value=="18" || objBankCode.value=="19"){
    if (firstCardNo=="4" && objBankCode.value=="19"){
    	isExist="Y";
    }else if (firstCardNo=="5" && secondCardNo !="0" && objBankCode.value=="18"){
    	isExist="Y";
    }
}else{//
	for(i=0;i<bankCardBegin.length;i++){
	
	   
	   //卡号段为7是，值就是他本身，所以不需要截取
	   tempBankCardBegin=bankCardBegin[i].substr(bankCardBegin[i].indexOf("-")+4).length;
	   
	   if(tempBankCardBegin==6){//卡号段6位
	       tempBeginCardNo=bankCodeAndCardNo.substr(0,bankCodeAndCardNo.length-1);
	    }else if(tempBankCardBegin==5){//卡号段5位   
	       tempBeginCardNo=bankCodeAndCardNo.substr(0,bankCodeAndCardNo.length-2);
	    }else{
	      tempBeginCardNo=bankCodeAndCardNo;
	      //alert("bankCardBegin[i]=="+bankCardBegin[i]+" tempBeginCardNo=="+tempBeginCardNo);
	    }
	    
	    //alert("tempBeginCardNo=="+tempBeginCardNo+" bankCardBegin[i]=="+bankCardBegin[i]);
	    if(bankCardBegin[i]==tempBeginCardNo){
	      isExist="Y";
	      break;
	    }   
	 }
 }
 //如果是平安银行的卡号不用校验 add by zhineng.zhuang
 if(objBankCode.value=="22" ){
 	isExist="Y";
 }
    
if(isExist=="N"){
  // alert("你输入的卡号段无效");
   return  false; 
}
//alert("end checkBankCardNo");
 return  true; 
}


//验证信用卡有效期

function isVaidCardDate(objBookingDate,objCardVaildYear,objCardVaildMonth){
  
  var cardVaildDate=objCardVaildYear.value+"-"+objCardVaildMonth.value;
  
  //alert("cardVaildDate=="+cardVaildDate);
  
  //alert("objBookingDate.value.substr(0,7)=="+objBookingDate.value.substr(0,7));
  
  if(objBookingDate.value.substr(2,7)>=cardVaildDate){
    return false;
  }
  
  return true;

}

