package com.mangocity.hotel.base.persistence;

import java.util.Date;

import com.mangocity.util.Entity;

/**
 * HtlReservCont generated by MyEclipse Persistence Tools
 */

public class HtlReservCont extends CEntity implements Entity {

    // Fields

    private Long id;

    private Date continueDate;

    /*
     * 每日酒店预订条款表
     */

    private HtlReservation htlReservation;

    private Date continueEndDate;

    private String weeks;

    public Date getContinueEndDate() {
        return continueEndDate;
    }

    public void setContinueEndDate(Date continueEndDate) {
        this.continueEndDate = continueEndDate;
    }

    public String getWeeks() {
        return weeks;
    }

    public void setWeeks(String weeks) {
        this.weeks = weeks;
    }

    // Constructors

    /** default constructor */
    public HtlReservCont() {
    }

    /** full constructor */
    public HtlReservCont(Date continueDate) {
        this.continueDate = continueDate;
    }

    // Property accessors

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Date getContinueDate() {
        return this.continueDate;
    }

    public void setContinueDate(Date continueDate) {
        this.continueDate = continueDate;
    }

    public HtlReservation getHtlReservation() {
        return htlReservation;
    }

    public void setHtlReservation(HtlReservation htlReservation) {
        this.htlReservation = htlReservation;
    }

    public Long getID() {
        // TODO Auto-generated method stub
        return id;
    }

    @Override
    /*
     * * 重写equals和hashCode方法,比较两个必住时期是否相等 Add by chenjuesu
     */
    public boolean equals(Object obj) {
        // TODO Auto-generated method stub
        return obj instanceof HtlReservContTemplate
            && this.continueDate.getTime() == ((HtlReservContTemplate) obj).getContinueDate()
                .getTime();
    }

    public int hashCode() {
        long ht = this.continueDate.getTime();
        return Long.valueOf(ht).intValue() ^ Long.valueOf(ht >> 32).intValue();
    }
}